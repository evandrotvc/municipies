
version: "3.8"

services:
  postgres:
    container_name: db
    environment:
      POSTGRES_PASSWORD: postgres
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis
    container_name: redis-municipes
    command: redis-server

  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - redis
    ports:
      - "3000:3000"
    volumes:
      - .:/app
    env_file: .env
    environment:
      RAILS_ENV: development
      ELASTICSEARCH_URL: http://elasticsearch:9200
    read_only: false
    restart: always
    entrypoint: ./entrypoints/docker-entrypoint.sh
    links:
      - mailcatcher

  app-migrations:
    container_name: app-migrations
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    env_file: .env
    read_only: false
    environment:
      RAILS_ENV: development
    entrypoint: ./entrypoints/setup-db.sh

  mailcatcher:
    image: yappabe/mailcatcher
    ports:
      - "1025:1025"
      - "1080:1080"

  sidekiq:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - app
      - postgres
      - redis
    volumes:
      - .:/app
    env_file: .env
    environment:
      RAILS_ENV: development
    entrypoint: chmod +x ./entrypoints/sidekiq-entrypoint.sh

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:6.8.21
  #   container_name: elasticsearch
  #   volumes:
  #     - .:/app
  #   ports:
  #     - 9200:9200
  #     - 9300:9300
  #   environment:
  #     - cluster.name=docker-cluster
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1



volumes:
  postgres-data:
  redis-data:
  app:

networks:
  app: